
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий
	
	Процедура ОбработкаПроведения(Отказ, РежимПроведения)
		
		СформироватьДвижения();  
		
		РассчитатьОклад(); 
		
		СформироватьДвиженияУдержания();
		
		СформироватьДвиженияВзаиморасчетыССотрудниками();
		
		СформироватьДвиженияПоОтпуску();
		
	КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

	Процедура СформироватьДвижения()
		
	    СформироватьДвиженияОсновныеНачисления();  
		
		Движения.ВКМ_ОсновныеНачисления.Записать();
		
	КонецПроцедуры 
	
	Процедура СформироватьДвиженияОсновныеНачисления()
	
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НачислениеЗарплатыОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	НачислениеЗарплатыОсновныеНачисления.Подразделение КАК Подразделение,
		|	НачислениеЗарплатыОсновныеНачисления.ВидРасчета КАК ВидРасчета,
		|	НачислениеЗарплатыОсновныеНачисления.ДатаНачала КАК ДатаНачала,
		|	НачислениеЗарплатыОсновныеНачисления.ДатаОкончания КАК ДатаОкончания,
		|	НачислениеЗарплатыОсновныеНачисления.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ ВТ_ДанныеДокумента
		|ИЗ
		|	Документ.ВКМ_НачислениеЗаработнойПлаты.ОсновныеНачисления КАК НачислениеЗарплатыОсновныеНачисления
		|ГДЕ
		|	НачислениеЗарплатыОсновныеНачисления.Ссылка = &Ссылка
		|	И НачислениеЗарплатыОсновныеНачисления.ВидРасчета = &Оклад
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДанныеДокумента.НомерСтроки КАК НомерСтроки,
		|	МАКСИМУМ(СведенияОСотрудниках.Период) КАК Период
		|ПОМЕСТИТЬ ВТ_ДатыУстановкиОклада
		|ИЗ
		|	ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников КАК СведенияОСотрудниках
		|		ПО ВТ_ДанныеДокумента.Сотрудник = СведенияОСотрудниках.Сотрудник
		|			И (СведенияОСотрудниках.Период <= НАЧАЛОПЕРИОДА(ВТ_ДанныеДокумента.ДатаНачала, МЕСЯЦ))
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ДанныеДокумента.НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	&Дата КАК ПериодРегистрации,
		|	ВТ_ДанныеДокумента.Сотрудник КАК Сотрудник,
		|	ВТ_ДанныеДокумента.Подразделение КАК Подразделение,
		|	ВТ_ДанныеДокумента.ВидРасчета КАК ВидРасчета,
		|	ВТ_ДанныеДокумента.ДатаНачала КАК ПериодДействияНачало,
		|	ВТ_ДанныеДокумента.ДатаОкончания КАК ПериодДействияКонец,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК БазовыйПериодНачало,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК БазовыйПериодКонец,
		|	ЕСТЬNULL(СведенияОСотрудниках.Оклад, 0) КАК Показатель
		|ИЗ
		|	ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДатыУстановкиОклада КАК ВТ_ДатыУстановкиОклада
		|		ПО ВТ_ДанныеДокумента.НомерСтроки = ВТ_ДатыУстановкиОклада.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников КАК СведенияОСотрудниках
		|		ПО ВТ_ДанныеДокумента.Сотрудник = СведенияОСотрудниках.Сотрудник
		|			И (СведенияОСотрудниках.Период <= НАЧАЛОПЕРИОДА(ВТ_ДанныеДокумента.ДатаНачала, МЕСЯЦ))
		|			И (ВТ_ДатыУстановкиОклада.Период = СведенияОСотрудниках.Период)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&Дата,
		|	НачислениеЗарплатыОсновныеНачисления.Сотрудник,
		|	НачислениеЗарплатыОсновныеНачисления.Подразделение,
		|	НачислениеЗарплатыОсновныеНачисления.ВидРасчета,
		|	НачислениеЗарплатыОсновныеНачисления.ДатаНачала,
		|	НачислениеЗарплатыОсновныеНачисления.ДатаОкончания,
		|	НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(НачислениеЗарплатыОсновныеНачисления.ДатаНачала, МЕСЯЦ, -2), МЕСЯЦ),
		|	КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(НачислениеЗарплатыОсновныеНачисления.ДатаНачала, МЕСЯЦ, -1), МЕСЯЦ),
		|	0
		|ИЗ
		|	Документ.ВКМ_НачислениеЗаработнойПлаты.ОсновныеНачисления КАК НачислениеЗарплатыОсновныеНачисления
		|ГДЕ
		|	НачислениеЗарплатыОсновныеНачисления.Ссылка = &Ссылка
		|	И НачислениеЗарплатыОсновныеНачисления.ВидРасчета <> &Оклад
		|	И НачислениеЗарплатыОсновныеНачисления.ВидРасчета ССЫЛКА ПланВидовРасчета.ВКМ_ОсновныеНачисления";
		Запрос.УстановитьПараметр("Ссылка", Ссылка);      
		Запрос.УстановитьПараметр("Дата", Дата);      
		Запрос.УстановитьПараметр("Оклад", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);      
		
		Движения.ВКМ_ОсновныеНачисления.Загрузить(Запрос.Выполнить().Выгрузить());
		
	КонецПроцедуры
	
	Процедура РассчитатьОклад()
		
		//Поиск дат для движения
		Отбор = Новый Структура;
		Отбор.Вставить("ВидРасчета",ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
		СтрокиОклада = ОсновныеНачисления.НайтиСтроки(Отбор);
		
		Если СтрокиОклада.Количество() = 0 Тогда 
			Возврат;
		КонецЕсли;
		
		МинимальнаяДатаНачала = СтрокиОклада[0].ДатаНачала;
		МаксимальнаяДатаОкончания = СтрокиОклада[0].ДатаОкончания;  
		
		Для Сч = 1 по СтрокиОклада.Количество() - 1 Цикл 
			
			Если МинимальнаяДатаНачала > СтрокиОклада[Сч].ДатаНачала Тогда 
				МинимальнаяДатаНачала = СтрокиОклада[Сч].ДатаНачала;	
			КонецЕсли;
			
			Если МаксимальнаяДатаОкончания < СтрокиОклада[Сч].ДатаОкончания Тогда 
				МаксимальнаяДатаОкончания = СтрокиОклада[Сч].ДатаОкончания;	
			КонецЕсли;
			
		КонецЦикла;
		
		Запрос = Новый Запрос;
		Запрос.Текст =   
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВКМ_ВыполненныеСотрудникомРаботыОбороты.Сотрудник КАК Сотрудник,
		|	ВКМ_ВыполненныеСотрудникомРаботыОбороты.КоличествоЧасовРасход КАК КоличествоЧасовРасход,
		|	ВКМ_ВыполненныеСотрудникомРаботыОбороты.СуммаКОплатеРасход КАК СуммаКОплатеРасход,
		|	ВКМ_ОсновныеНачисления.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ ВТ
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВКМ_ВыполненныеСотрудникомРаботы.Обороты(
		|				&МинимальнаяДатаНачала,
		|				&МаксимальнаяДатаОкончания,
		|				День,
		|				Сотрудник В
		|					(ВЫБРАТЬ
		|						ВКМ_ОсновныеНачисления.Сотрудник КАК Сотрудник
		|					ИЗ
		|						РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
		|					ГДЕ
		|						ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
		|						И ВКМ_ОсновныеНачисления.ВидРасчета = &Оклад)) КАК ВКМ_ВыполненныеСотрудникомРаботыОбороты
		|		ПО (ВКМ_ВыполненныеСотрудникомРаботыОбороты.Сотрудник = ВКМ_ОсновныеНачисления.Сотрудник)
		|ГДЕ
		|	ВКМ_ОсновныеНачисления.ВидРасчета = &Оклад
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ.Сотрудник КАК Сотрудник,
		|	ЕСТЬNULL(СУММА(ВТ.КоличествоЧасовРасход), 0) КАК КоличествоЧасов,
		|	ЕСТЬNULL(СУММА(ВТ.СуммаКОплатеРасход), 0) КАК СуммаКОплате,
		|	ВТ.НомерСтроки КАК НомерСтроки
		|ИЗ
		|	ВТ КАК ВТ
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ.Сотрудник,
		|	ВТ.НомерСтроки";	
		Запрос.УстановитьПараметр("Ссылка",Ссылка);
		Запрос.УстановитьПараметр("Оклад", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);      
		Запрос.УстановитьПараметр("МинимальнаяДатаНачала", МинимальнаяДатаНачала);      
		Запрос.УстановитьПараметр("МаксимальнаяДатаОкончания", МаксимальнаяДатаОкончания);  
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл 
			
			Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];    
			Движение.Результат = Движение.Показатель + Выборка.СуммаКОплате;
						
		КонецЦикла; 
		
		Движения.ВКМ_ОсновныеНачисления.Записать(,Истина);
		
	КонецПроцедуры

	Процедура СформироватьДвиженияУдержания()
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	ВКМ_ОсновныеНачисления.Подразделение КАК Подразделение,  
		|	ВКМ_ОсновныеНачисления.Результат КАК Показатель,
		|	ВКМ_ОсновныеНачисления.Результат * 0.13 КАК Результат,
		|	&Дата КАК ПериодРегистрации,
		|	&НДФЛ КАК ВидРасчета
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
		|ГДЕ
		|	ВКМ_ОсновныеНачисления.ПериодРегистрации = &Дата";
		Запрос.УстановитьПараметр("Дата", НачалоМесяца(Дата));   
		Запрос.УстановитьПараметр("НДФЛ", ПланыВидовРасчета.ВКМ_Удержания.НДФЛ);   
		
		Движения.ВКМ_Удержания.Загрузить(Запрос.Выполнить().Выгрузить());   
		Движения.ВКМ_Удержания.Записать();
		
	КонецПроцедуры
	
	Процедура СформироватьДвиженияВзаиморасчетыССотрудниками()
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	ЕСТЬNULL(СУММА(ВКМ_ОсновныеНачисления.Результат), 0) КАК Результат
		|ПОМЕСТИТЬ ВТ_ОсновныеНачисления
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
		|ГДЕ
		|	ВКМ_ОсновныеНачисления.ПериодРегистрации = &Дата
		|	И ВКМ_ОсновныеНачисления.Регистратор.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_ОсновныеНачисления.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВКМ_Удержания.Сотрудник КАК Сотрудник,
		|	ЕСТЬNULL(СУММА(ВКМ_Удержания.Результат), 0) КАК Результат
		|ПОМЕСТИТЬ ВТ_Удержания
		|ИЗ
		|	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
		|ГДЕ
		|	ВКМ_Удержания.ПериодРегистрации = &Дата
		|	И ВКМ_Удержания.Регистратор.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_Удержания.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВКМ_ДополнительныеНачисления.Сотрудник КАК Сотрудник,
		|	ЕСТЬNULL(СУММА(ВКМ_ДополнительныеНачисления.Результат), 0) КАК Результат
		|ПОМЕСТИТЬ ВТ_ДополнительныеНачисления
		|ИЗ
		|	РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ВКМ_ДополнительныеНачисления
		|ГДЕ
		|	ВКМ_ДополнительныеНачисления.ПериодРегистрации = &Дата
		|	И ВКМ_ДополнительныеНачисления.Регистратор.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_ДополнительныеНачисления.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ВТ_ОсновныеНачисления.Результат, 0) + ЕСТЬNULL(ВТ_ДополнительныеНачисления.Результат, 0) - ЕСТЬNULL(ВТ_Удержания.Результат, 0) КАК Сумма,
		|	ВТ_ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	&Дата КАК Период
		|ИЗ
		|	ВТ_ОсновныеНачисления КАК ВТ_ОсновныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДополнительныеНачисления КАК ВТ_ДополнительныеНачисления
		|		ПО ВТ_ОсновныеНачисления.Сотрудник = ВТ_ДополнительныеНачисления.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Удержания КАК ВТ_Удержания
		|		ПО ВТ_ОсновныеНачисления.Сотрудник = ВТ_Удержания.Сотрудник";
		Запрос.УстановитьПараметр("Дата", НачалоМесяца(Дата));   
		Запрос.УстановитьПараметр("Ссылка", Ссылка);       
		
		Движения.ВКМ_ВзаиморасчетыССотрудниками.Загрузить(Запрос.Выполнить().Выгрузить());   
		Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать();
		
	КонецПроцедуры
	
	Процедура СформироватьДвиженияПоОтпуску()
		
		ТаблицаОтпусков = Новый ТаблицаЗначений;
		ТаблицаОтпусков.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Пользователи")); 
		ТаблицаОтпусков.Колонки.Добавить("ВидРасчета", Новый ОписаниеТипов("ПланВидовРасчетаСсылка.ВКМ_ОсновныеНачисления")); 
		ТаблицаОтпусков.Колонки.Добавить("ДатаНачала", Новый ОписаниеТипов("Дата"));
		ТаблицаОтпусков.Колонки.Добавить("ДатаОкончания", Новый ОписаниеТипов("Дата"));
		
		Для Каждого стр из ОсновныеНачисления Цикл 
			НовСтр = ТаблицаОтпусков.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтр,стр);
		КонецЦикла;
		
		Движения.ВКМ_ПланированиеОтпусков.Записывать = Истина;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОсновныеНачисленияОтпуск.Сотрудник КАК Сотрудник,
		|	РАЗНОСТЬДАТ(ОсновныеНачисленияОтпуск.ДатаНачала, ОсновныеНачисленияОтпуск.ДатаОкончания, ДЕНЬ) КАК КоличествоДней
		|ПОМЕСТИТЬ ВТ
		|ИЗ
		|	&ОсновныеНачисленияОтпуск КАК ОсновныеНачисленияОтпуск
		|ГДЕ
		|	ОсновныеНачисленияОтпуск.ВидРасчета = &ВидРасчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ.Сотрудник КАК Сотрудник,
		|	СУММА(ВТ.КоличествоДней) КАК КоличествоДней
		|ИЗ
		|	ВТ КАК ВТ
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ.Сотрудник";
		Запрос.УстановитьПараметр("ВидРасчета",ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);
		Запрос.УстановитьПараметр("ОсновныеНачисленияОтпуск",ТаблицаОтпусков);
		Выборка = Запрос.Выполнить().Выбрать(); 
		
		Пока Выборка.Следующий() Цикл 
			Движение = Движения.ВКМ_ПланированиеОтпусков.Добавить();   
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Год = Год(Дата);
			Движение.Сотрудник = Выборка.Сотрудник;
			Движение.КоличествоДней = Выборка.КоличествоДней;
		КонецЦикла;
				
	КонецПроцедуры
	
#КонецОбласти

#КонецЕсли