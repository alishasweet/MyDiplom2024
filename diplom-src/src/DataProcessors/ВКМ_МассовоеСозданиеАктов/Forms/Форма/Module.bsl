
&НаСервере
Процедура ВывестиНаСервере()
	
	Флаг = ПроверитьЗаполнение();
	Если НЕ Флаг Тогда
		Возврат;
	КонецЕсли;
	Если НЕ(НачалоМесяца(Объект.Период.ДатаНачала) = Объект.Период.ДатаНачала  и КонецМесяца(Объект.Период.ДатаНачала) = Объект.Период.ДатаОкончания) Тогда
		Сообщить("Необходимо выбрать МЕСЯЦ отчета!");
		Возврат;
	КонецЕсли; 
	
	ЗаполнитьСписок();

КонецПроцедуры

&НаКлиенте
Процедура Вывести(Команда)
	ВывестиНаСервере();
КонецПроцедуры

&НаСервере 
Процедура ЗаполнитьСписок()    
	
	Объект.СписокДоговоров.Очистить();
	
	Запрос= Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДоговорыКонтрагентов.Ссылка КАК Договор,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслуг.ПометкаУдаления
	|			ТОГДА """"
	|		ИНАЧЕ РеализацияТоваровУслуг.Ссылка
	|	КОНЕЦ КАК Реализация,
	|	ДоговорыКонтрагентов.Владелец КАК Контрагент
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|		ПОЛНОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО (РеализацияТоваровУслуг.Договор = ДоговорыКонтрагентов.Ссылка)
	|ГДЕ
	|	ВЫБОР
	|			КОГДА НЕ РеализацияТоваровУслуг.Ссылка ЕСТЬ NULL
	|				ТОГДА РеализацияТоваровУслуг.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ДоговорыКонтрагентов.ВидДоговора = &АбонентскоеОбслуживание";      
	Запрос.УстановитьПараметр("АбонентскоеОбслуживание",Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание);
	Запрос.УстановитьПараметр("НачалоПериода",Объект.Период.ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериода",Объект.Период.ДатаОкончания);   
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл 
		ЗаполнитьЗначенияСвойств(Объект.СписокДоговоров.Добавить(),Выборка);	
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапуститьОперацию(Команда)
	
	Флаг = ПроверитьЗаполнение();
	Если НЕ Флаг Тогда
		Возврат;
	КонецЕсли;
	Если НЕ(НачалоМесяца(Объект.Период.ДатаНачала) = Объект.Период.ДатаНачала  и КонецМесяца(Объект.Период.ДатаНачала) = Объект.Период.ДатаОкончания) Тогда
		Сообщить("Необходимо выбрать МЕСЯЦ отчета!");
		Возврат;
	КонецЕсли; 
	
	ЗаполнитьСписок();
	
	ИдентификторФоновогоЗадания = "";
	Индикатор = 0;
	СтрокаСостояния = "";
	
	ПараметрыЗапуска = Новый Структура;
	ПараметрыЗапуска.Вставить("НачалоПериода", Объект.Период.ДатаНачала);
	ПараметрыЗапуска.Вставить("КонецПериода", Объект.Период.ДатаОкончания);
	
	СтруктураФоновогоЗадания = ВыполнитьФоновоеЗаданиеНаСервере(ПараметрыЗапуска, УникальныйИдентификатор);
	ИдентификторФоновогоЗадания	= СтруктураФоновогоЗадания.ИдентификаторЗадания;
	
	ПараметрыОжидания  = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Истина;
	ПараметрыОжидания.Интервал  = 2;
	//ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(СтруктураФоновогоЗадания, Новый ОписаниеОповещения("ОбработатьДанные", ЭтотОбъект), ПараметрыОжидания);
	
	// подключим обработку ожидания получения "отклика" на форму
	//ПодключитьОбработчикОжидания("ОбработчикОжиданияИндикатор",5);
	
КонецПроцедуры

&НаСервере
Функция ВыполнитьФоновоеЗаданиеНаСервере(ПараметрыЗапуска, УникальныйИдентификатор)
	
	УстановитьПривилегированныйРежим(Истина);

	НаименованиеЗадания = "Длительная операция: массовое создание актов";

	ВыполняемыйМетод = "ВКМ_ДлительныйМодуль.ПровестиДокументыРеализации";
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НаименованиеЗадания;
	ПараметрыВыполнения.ЗапуститьВФоне 	= Истина;
	ПараметрыВыполнения.Вставить("ИдентификаторФормы", УникальныйИдентификатор); 
	
	СтруктураФоновогоЗадания = ДлительныеОперации.ВыполнитьВФоне(ВыполняемыйМетод, ПараметрыЗапуска, ПараметрыВыполнения);
	
	Возврат СтруктураФоновогоЗадания;
	
КонецФункции

&НаКлиенте
Процедура ОбработатьДанные(Результат, ДополнительныеПараметры) Экспорт

	ОтключитьОбработчикОжидания("ОбработчикОжиданияИндикатор");
	
	Если Результат = Неопределено Тогда
		Возврат;
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.ПодробноеПредставлениеОшибки);
		ЭтаФорма.СтрокаСостояния = "Ошибка";
	ИначеЕсли Результат.Статус = "Выполнено" Тогда
		ЭтаФорма.Индикатор = 100;
		ЭтаФорма.СтрокаСостояния = "Выполнено";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте 
Процедура ОбработчикОжиданияИндикатор() 
	
	Прогресс = ПрочитатьПрогресс(ИдентификторФоновогоЗадания);
	Если НЕ ТипЗнч(Прогресс) = Тип("Структура") Тогда
		ЭтаФорма.СтрокаСостояния = "";
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Прогресс) = Тип("Структура") 
		И Прогресс.Свойство("ЗавершеноАварийно") Тогда
		ОтключитьОбработчикОжидания("ОбработчикОжиданияИндикатор");
		Возврат;
	КонецЕсли;
	
	Если Прогресс.Свойство("ЗаданиеВыполнено") И Прогресс.ЗаданиеВыполнено Тогда
		ЭтаФорма.Индикатор = 100;
		ЭтаФорма.СтрокаСостояния = "Задание завершено.";
	Иначе
		Если Прогресс.Свойство("Процент") Тогда
			ЭтаФорма.Индикатор = Прогресс.Процент;
			
		КонецЕсли;
		
		Если Прогресс.Свойство("Текст") Тогда
			ЭтаФорма.СтрокаСостояния = Прогресс.Текст;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПрочитатьПрогресс(Знач ИдентификаторФоновогоЗадания) Экспорт
	
	Задание = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(ИдентификаторФоновогоЗадания);
	
	Если Задание = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если Задание.Состояние = СостояниеФоновогоЗадания.ЗавершеноАварийно Тогда
		ОтключитьОбработчикОжидания("ОбработчикОжиданияИндикатор");
		Возврат Неопределено;
	КонецЕсли;
	
	// используем БСП
	ПрогрессЗадания = ДлительныеОперации.ПрочитатьПрогресс(ИдентификаторФоновогоЗадания);
	
	Если ПрогрессЗадания = Неопределено
	 Или ТипЗнч(ПрогрессЗадания) <> Тип("Структура") Тогда 
		ПрогрессЗадания = Новый Структура;
	КонецЕсли;
	ПрогрессЗадания.Вставить("ЗаданиеВыполнено", ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторФоновогоЗадания));
	
	Возврат ПрогрессЗадания;
	
КонецФункции

